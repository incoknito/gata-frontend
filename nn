import React, { Fragment } from 'react';
import { Disclosure, Transition } from '@headlessui/react';
import {
  ChevronDownIcon,
  XMarkIcon,
  CurrencyDollarIcon,
  UserGroupIcon,
  CubeIcon,
  DotsHorizontalIcon,
} from '@heroicons/react/outline';

const menuItems = [
  {
    name: 'Economy',
    description: 'Explore features related to the economy.',
    dropdownItems: [
      { name: 'Currency Conversion', href: '/currency-conversion', icon: CurrencyDollarIcon },
      { name: 'Market Trends', href: '/market-trends', icon: ChartBarIcon },
    ],
  },
  {
    name: 'Community',
    description: 'Discover community-focused features.',
    dropdownItems: [
      { name: 'Forums', href: '/forums', icon: UserGroupIcon },
      { name: 'Events', href: '/events', icon: CalendarIcon },
    ],
  },
  {
    name: 'Token',
    description: 'Learn about our token and its utility.',
    dropdownItems: [
      { name: 'Tokenomics', href: '/tokenomics', icon: CubeIcon },
      { name: 'Governance', href: '/governance', icon: ShieldCheckIcon },
    ],
  },
  {
    name: 'More',
    description: 'Explore additional features and resources.',
    dropdownItems: [
      { name: 'FAQ', href: '/faq', icon: QuestionMarkCircleIcon },
      { name: 'Contact Us', href: '/contact', icon: MailIcon },
    ],
  },
  {
    name: 'Develop',
    description: 'Access developer-focused tools and documentation.',
    dropdownItems: [
      { name: 'API Documentation', href: '/api-docs', icon: CodeIcon },
      { name: 'Developer Forum', href: '/developer-forum', icon: ChatAltIcon },
    ],
  },
];

const callsToAction = [
  { name: 'Sign Up', href: '/signup', icon: UserAddIcon },
  { name: 'Log In', href: '/login', icon: UserCircleIcon },
];

export default function Navbar() {
  return (
    <div>
      <header>
        <nav>
          <Popover>
            <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
              <div className="flex justify-between items-center py-4 md:justify-start md:space-x-10">
                <div className="flex justify-start lg:w-0 lg:flex-1">
                  <a href="/">
                    <span className="sr-only">Logo</span>
                    <img
                      className="h-8 w-auto sm:h-10"
                      src="/logo.png"
                      alt="Logo"
                    />
                  </a>
                </div>
                <div className="-mr-2 -my-2 md:hidden">
                  <Popover.Button className="bg-white rounded-md p-2 inline-flex items-center justify-center text-gray-400 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-500">
                    <span className="sr-only">Open menu</span>
                    <MenuIcon className="h-6 w-6" aria-hidden="true" />
                  </Popover.Button>
                </div>
                <Popover.Group as="nav" className="hidden md:flex space-x-10">
                  {menuItems.map((item) => (
                    <Popover key={item.name} className="relative">
                      {({ open }) => (
                        <>
                          <Popover.Button
                            className={classNames(
                              open ? 'text-gray-900' : 'text-gray-500',
                              'group bg-white rounded-md inline-flex items-center text-base font-medium hover:text-gray-900'
                            )}
                          >
                            <span>{item.name}</span>
                            <ChevronDownIcon
                              className={classNames(
                                open ? 'text-gray-600' : 'text-gray-400',
                                'ml-2 h-5 w-5 group-hover:text-gray-500'
                              )}
                              aria-hidden="true"
                            />
                          </Popover.Button>

                          <Transition
                            show={open}
                            as={Fragment}
                            enter="transition ease-out duration-200"
                            enterFrom="opacity-0 translate-y-1"
                            enterTo="opacity-100 translate-y-0"
                            leave="transition ease-in duration-150"
                            leaveFrom="opacity-100 translate-y-0"
                            leaveTo="opacity-0 translate-y-1"
                          >
                            <Popover.Panel
                              static
                              className="absolute z-10 inset-x-0 transform shadow-lg"
                            >
                              <div className="bg-white">
                                <div className="mx-auto px-4 py-6 sm:px-6 lg:px-8">
                                  <div className="grid grid-cols-1 gap-y-6 sm:grid-cols-2 gap-x-4">
                                    {item.dropdownItems.map((dropdownItem) => (
                                      <a
                                        key={dropdownItem.name}
                                        href={dropdownItem.href}
                                        className="text-base font-medium text-gray-900 hover:text-gray-700"
                                      >
                                        <div className="flex items-center gap-2">
                                          <dropdownItem.icon
                                            className="h-5 w-5 text-gray-500"
                                            aria-hidden="true"
                                          />
                                          <span>{dropdownItem.name}</span>
                                        </div>
                                      </a>
                                    ))}
                                  </div>
                                  <div className="mt-6">
                                    <a
                                      href={item.href}
                                      className="block text-sm font-medium text-indigo-600 hover:text-indigo-500"
                                    >
                                      Learn more
                                    </a>
                                  </div>
                                </div>
                              </div>
                            </Popover.Panel>
                          </Transition>
                        </>
                      )}
                    </Popover>
                  ))}
                </Popover.Group>
                <div className="hidden md:flex items-center justify-end md:flex-1 lg:w-0">
                  {callsToAction.map((item) => (
                    <a
                      key={item.name}
                      href={item.href}
                      className="whitespace-nowrap text-base font-medium text-gray-500 hover:text-gray-900"
                    >
                      <item.icon className="h-6 w-6 text-gray-400" aria-hidden="true" />
                      {item.name}
                    </a>
                  ))}
                </div>
              </div>
            </div>
            <Popover.Panel
              focus
              className="absolute top-0 inset-x-0 p-2 transition transform origin-top-right md:hidden"
            >
              <div className="rounded-lg shadow-lg ring-1 ring-black ring-opacity-5 bg-white divide-y-2 divide-gray-50">
                <div className="pt-5 pb-6 px-5">
                  <div className="flex items-center justify-between">
                    <div>
                      <img
                        className="h-8 w-auto"
                        src="/logo.png"
                        alt="Logo"
                      />
                    </div>
                    <div className="-mr-2">
                      <Popover.Button className="bg-white rounded-md p-2 inline-flex items-center justify-center text-gray-400 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-500">
                        <span className="sr-only">Close menu</span>
                        <XMarkIcon className="h-6 w-6" aria-hidden="true" />
                      </Popover.Button>
                    </div>
                  </div>
                  <div className="mt-6">
                    <nav className="grid gap-y-8">
                      {menuItems.map((item) => (
                        <a
                          key={item.name}
                          href={item.href}
                          className="-m-3 p-3 flex items-center rounded-md hover:bg-gray-50"
                        >
                          <div className="flex items-center gap-2">
                            <item.icon
                              className="flex-shrink-0 h-6 w-6 text-indigo-600"
                              aria-hidden="true"
                            />
                            <span className="ml-3 text-base font-medium text-gray-900">{item.name}</span>
                          </div>
                        </a>
                      ))}
                    </nav>
                  </div>
                </div>
                <div className="py-6 px-5 space-y-6">
                  <div className="grid grid-cols-2 gap-y-4 gap-x-8">
                    {callsToAction.map((item) => (
                      <a
                        key={item.name}
                        href={item.href}
                        className="text-base font-medium text-gray-900 hover:text-gray-700"
                      >
                        <div className="flex items-center gap-2">
                          <item.icon
                            className="h-5 w-5 text-gray-500"
                            aria-hidden="true"
                          />
                          <span>{item.name}</span>
                        </div>
                      </a>
                    ))}
                  </div>
                </div>
              </div>
            </Popover.Panel>
          </Popover>
        </nav>
      </header>
    </div>
  );
}
